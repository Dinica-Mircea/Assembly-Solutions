     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, fopen, fprintf, fclose, scanf               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  import fopen msvcrt.dll
    11                                  import scanf msvcrt.dll
    12                                  import fprintf msvcrt.dll
    13                                  import fclose msvcrt.dll
    14                                  ; our data is declared here (the variables needed by our program)
    15                                  segment data use32 class=data
    16                                      ; ...
    17 00000000 00<rept>                    s times 100 db 0
    18 00000064 616669736172652E74-         nume_fisier db "afisare.txt",0
    18 0000006D 787400             
    19 00000070 7700                        mod_acces db "w",0
    20 00000072 257300                      format db "%s",0
    21 00000075 74657874756C206369-         format2 db "textul citit este: %s",0ah,0
    21 0000007E 74697420657374653A-
    21 00000087 2025730A00         
    22 0000008C FFFFFFFF                    descriptor_fis dd -1
    23                                  ; our code starts here
    24                                  segment code use32 class=code
    25                                      start:
    26                                          ; ...
    27 00000000 68[70000000]                    push dword mod_acces
    28 00000005 68[64000000]                    push dword nume_fisier
    29 0000000A FF15[00000000]                  call [fopen]
    30 00000010 83C408                          add esp,4*2
    31 00000013 A3[8C000000]                    mov [descriptor_fis],eax
    32 00000018 B905000000                      mov ecx,5
    33 0000001D E338                            jecxz final
    34                                          repeta:
    35 0000001F 68[00000000]                        push dword s
    36 00000024 68[72000000]                        push dword format
    37 00000029 FF15[00000000]                      call [scanf]
    38 0000002F 83C408                              add esp,4*2
    39 00000032 803D[00000000]24                    cmp byte[s],'$'
    40 00000039 741C                                je final
    41 0000003B 68[00000000]                        push dword s
    42 00000040 68[75000000]                        push dword format2
    43 00000045 FF35[8C000000]                      push dword [descriptor_fis]
    44 0000004B FF15[00000000]                      call [fprintf]
    45 00000051 83C40C                              add esp,4*3
    46 00000054 41                                  inc ecx
    47 00000055 E2C8                            loop repeta
    48                                          final:
    49 00000057 FF35[8C000000]                  push dword[descriptor_fis]
    50 0000005D FF15[00000000]                  call [fclose]
    51 00000063 83C404                          add esp,4*1
    52                                          ; exit(0)
    53 00000066 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    54 00000068 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
