     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ..
    14 00000000 02                          a db 2
    15 00000001 03                          b db 3
    16 00000002 04                          c db 4
    17 00000003 0600                        d dw 6
    18                                  
    19                                  
    20                                  ; our code starts here
    21                                  segment code use32 class=code
    22                                      start:
    23                                          ; 30.[(a-b)*5+d]-2*c=[(2-3)*5+6]-2*4=(-5+6)-8=-7
    24 00000000 8A25[00000000]                  mov AH,[a] ;AH=a=2
    25 00000006 2A25[01000000]                  sub AH,[b] ;AH=a-b=-1
    26 0000000C B005                            mov AL,5   ;AL=5
    27 0000000E F6E4                            mul AH     ;AX=AL*AH=-1*5=-5
    28 00000010 660305[03000000]                add AX,[d] ;AX=AX+6=1
    29 00000017 6689C3                          mov BX,AX  ;BX=AX=1
    30 0000001A B002                            mov AL,2   ;AL=2
    31 0000001C 8A25[02000000]                  mov AH,[c]  ;AH=4
    32 00000022 F6E4                            mul AH     ;AX=AL*AH=2*4=8
    33 00000024 6629C3                          sub BX,AX  ;BX=BX-AX=1-8=-7
    34                                          ; exit(0)
    35 00000027 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    36 00000029 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
