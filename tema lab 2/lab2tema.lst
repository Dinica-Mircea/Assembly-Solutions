     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13 00000000 01                          a db 1
    14 00000001 02                          b db 2 
    15 00000002 03                          c db 3
    16 00000003 04                          d db 4
    17                                      
    18                                      ; ...
    19                                  
    20                                  ; our code starts here
    21                                  segment code use32 class=code
    22                                      start:
    23                                          ; 1.c-(a+d)+(b+d)=3-(1+4)+(2+4)=3-5+6=4
    24 00000000 8A25[00000000]                      mov AH,[a] ;AH=a=1
    25 00000006 0225[03000000]                      add AH,[d] ;AH=a+d=5
    26 0000000C 8A3D[01000000]                      mov BH,[b] ;BH=b=2
    27 00000012 023D[03000000]                      add BH,[d] ;BH=b+d=6
    28 00000018 8A2D[02000000]                      mov CH,[c] ;CH=c
    29 0000001E 28E5                                sub CH,AH  ;CH=CH-AH=3-5=-2
    30 00000020 00FD                                add CH,BH  ;CH=CH+BH=-2+6=4
    31                                              
    32                                          ; exit(0)
    33 00000022 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    34 00000024 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
