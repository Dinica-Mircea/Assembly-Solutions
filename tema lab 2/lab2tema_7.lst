     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; 
    14 00000000 03                          a db 3
    15 00000001 02                          b db 2
    16 00000002 04                          c db 4
    17 00000003 06                          d db 6
    18 00000004 0700                        e dw 7
    19 00000006 0800                        f dw 8
    20 00000008 0900                        g dw 9
    21 0000000A 0A00                        h dw 10
    22                                  
    23                                  
    24                                  ; our code starts here
    25                                  segment code use32 class=code
    26                                      start:
    27                                          ; 1.((a-b)*4)/c=((3-2)*4)/4=1
    28 00000000 8A25[00000000]                  mov AH,[a] ;AH=a=1
    29 00000006 2A25[01000000]                  sub AH,[b] ;AH=a-b=3-2=1
    30 0000000C B004                            mov AL,4   ;AL=4
    31 0000000E F6E4                            mul AH     ;AX=AH*AL=4*1=4
    32 00000010 B304                            mov BL,4   ;BL=4
    33 00000012 F6F3                            div BL     ;AL=AX/BL=4/4=1
    34                                      
    35                                          ; exit(0)
    36 00000014 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    37 00000016 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
