     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit             ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  global s
    12                                  extern citire
    13                                  
    14                                  ; our data is declared here (the variables needed by our program)
    15                                  segment data use32 class=public
    16                                      ; ...
    17 00000000 257300                      format db "%s",0
    18 00000003 00<rept>                s times 10 db 0
    19                                  semn equ '-'
    20 0000000D 00<rept>                d times 20 db 0
    21                                  ; our code starts here
    22                                  segment code use32 class=public
    23                                      start:
    24                                          ; ...
    25 00000000 BF[0D000000]                    mov edi,d
    26 00000005 B964000000                      mov ecx,100
    27 0000000A E32F                            jecxz final
    28                                          repeta:
    29 0000000C E8(00000000)                    call citire
    30 00000011 BE[03000000]                    mov esi,s
    31                                          
    32 00000016 E323                            jecxz final
    33 00000018 B800000000                          mov EAX,0
    34 0000001D AC                                  lodsb
    35 0000001E 3C24                                cmp AL,'$'
    36 00000020 7419                                je iesire
    37 00000022 3C2D                                cmp AL,semn
    38 00000024 750D                                jne continua
    39 00000026 50                                  push EAX
    40 00000027 AC                                  lodsb
    41 00000028 6683E830                            sub AX,48
    42 0000002C 66F7D8                              neg AX
    43 0000002F AA                                  stosb
    44 00000030 58                                  pop EAX
    45 00000031 EB06                                jmp continua2
    46                                              continua:
    47 00000033 6683E830                            sub AX,48
    48 00000037 66AB                                stosw
    49                                              continua2:
    50 00000039 E2D1                            loop repeta
    51                                          iesire:
    52                                          final:
    53                                          ; exit(0)
    54 0000003B 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    55 0000003D FF15[00000000]                  call    [exit]       ; call exit to terminate the program
